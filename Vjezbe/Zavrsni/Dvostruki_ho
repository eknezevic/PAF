import matplotlib.pyplot as plt
import numpy as np
from numpy import sin,cos
from scipy import*
from scipy.integrate import odeint
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import animation
# from matplotlib.animation import PillowWriter


g= 9.81
m1, m2= 2, 0.3
L1, L2= 7, 4
pi=3.14159265
th1_0,dth1_0,th2_0,dth2_0=0.999*pi,0,pi,0

L = (L1 + L2)*1.2
pocetni=[th1_0,dth1_0,th2_0,dth2_0] 
t=np.linspace(0,40,1000)
# 25 numerickih tocaka u jednoj sekunddi

def fja(pocetni,t):
    th1=pocetni[0]
    dth1=pocetni[1]
    th2=pocetni[2]
    dth2=pocetni[3]
    ddth1=(0.5*L1*m2*sin(2.0*th1-2.0*th2)*dth1**2+L2*m2*sin(th1-th2)*dth2**2 
           +g*m1*sin(th1)+0.5*g*m2*sin(th1-2.0*th2)+0.5*g*m2*sin(th1))/(L1*(-m1+m2*cos(th1-th2)**2-m2))
    ddth2=((-m1-m2)*(L1*sin(th1-th2)*dth1**2-g*sin(th2))
           -(L2*m2*sin(th1-th2)*dth2**2+g*m1*sin(th1)+g*m2*sin(th1))*cos(th1-th2))/(L2*(-m1+m2*cos(th1-th2)**2-m2))
    return[dth1,ddth1,dth2,ddth2]

y=odeint(fja, pocetni, t)
th1= y[:,0] 
dth1= y[:,1]
th2= y[:,2]
dth2= y[:,3]

x1=L1*sin(th1)
y1=-L1*cos(th1)
x2=L1*sin(th1)+L2*sin(th2)
y2=-L1*cos(th1)-L2*cos(th2)

trag_x1, trag_y1 =[],[]
trag_x2, trag_y2 =[],[]


def animate(i):
    line1.set_data( [0,x1[i],x2[i]], [0,y1[i],y2[i]] )
    if i == 0:
        trag_x1.clear()
        trag_y1.clear()
        trag_x2.clear()
        trag_y2.clear()
    trag_x1.append(x1[i])
    trag_y1.append(y1[i])
    trag_x2.append(x2[i])
    trag_y2.append(y2[i])
    trace1.set_data(trag_x2,trag_y2)
    trace2.set_data(trag_x1,trag_y1)

fig, ax=plt.subplots(1,1,figsize=(5,5))
line1, =plt.plot([], [], 'o-', lw=2, markersize='8') 
trace1, = ax.plot([], [], '-', lw=1)
trace2, = ax.plot([], [], '-', lw=1)
ani= animation.FuncAnimation(fig, animate, frames=1000, interval=40)

ax.set_xlim(-L,L)
ax.set_ylim(-L,L)
plt.xlabel('x [m]')
plt.ylabel('y [m]')
plt.show()
# ani.save('ho.gif',writer='pillow',fps=25)
